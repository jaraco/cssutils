=========
profiles
=========

.. index::
    single: profile

``cssutils.profile``
====================
A global object ``cssutils.profile`` is used for validation of all properties. It is an instance of :class:`cssutils.profiles.Profiles`. Add or remove new profile definitions here.

Most important method is :meth:`cssutils.profiles.Profiles.addProfile` to add new properties to cssutils and the setting of ``defaultProfiles``.



Example of how to add a new profile::

    >>> import cssutils
    >>> sheet = cssutils.parseString('x { -test-x: 1 }')
    >>> print sheet.cssRules[0].style.getProperties()[0].valid
    False
    >>> P1 = {
    ...    '-test-x': '{num}',
    ...    '-test-y': '{ident}|{percentage}',
    ...    # custom validation function
    ...    '-test-z': lambda(v): int(v) > 0}
    >>> cssutils.profile.addProfile('test', P1)
    >>> sheet = cssutils.parseString('x { -test-x: 1 }')
    >>> print sheet.cssRules[0].style.getProperties()[0].valid
    True

An additional per CSSStyleSheet setting of a profile may be added soon.

**Please note: This might change again, but only slightly as it has been refactored in 0.9.6a2.**


.. index::
    single: defaultProfiles

``cssutils.profile.defaultProfiles``
====================================
`defaultProfiles` is used for validation. To use e.g. the CSS2 profile set ``cssutils.profile.defaultProfiles = cssutils.profile.CSS_LEVEL_2``


``cssutils.profiles.Profiles``
==============================
.. autoclass:: cssutils.profiles.Profiles
    :members:
    :inherited-members:
